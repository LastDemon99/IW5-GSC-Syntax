{
  "scopeName": "source.gsc",
  "fileTypes": ["gsc"],
  "name": "Game Script Code",
  "patterns": [
    {
      "include": "#include"
    },
    {
      "include": "#define"
    },
    {
      "include": "#undef"
    },
    {
      "include": "#comment_line"
    },
    {
      "include": "#comment_block"
    },
    {
      "include": "#keyword"
    },
    {
      "include": "#function"
    },
    {
      "include": "#variable"
    }
  ],
  "repository": {
    "include": {
      "begin": "^\\s*(#\\s*include)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.include.gsc"
        },
        "2": {
          "name": "punctuation.definition.directive.gsc"
        }
      },
      "end": ";",
      "endCaptures": {
        "0": {
          "name": "punctuation.terminator.statement.gsc"
        }
      },
      "patterns": [
        {
          "match": "[a-zA-Z_$][\\w$]*(?:\\\\[a-zA-Z_$][\\w$]*)*",
          "name": "punctuation.definition.path.gsc"
        },
        {
          "match": "(\\\\)\\n",
          "name": "constant.character.escape.line-continuation.gsc"
        }
      ]
    },
    "define": {
      "begin": "^\\s*(#define)\\s+((?<!\\w)[a-zA-Z_]\\w*(?!\\w))?",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.gsc"
        },
        "2": {
          "name": "constant.language.gsc"
        }
      },
      "end": "(?<!\\\\)(?=\\n)",
      "patterns": [
        {
          "match": "\\(",
          "name": "punctuation.section.parens.begin.bracket.round.gsc"
        },
        {
          "match": "\\)",
          "name": "punctuation.section.parens.end.bracket.round.gsc"
        },
        {
          "include": "#string"
        },
        {
          "include": "$base"
        }
      ]
    },
    "undef": {
      "begin": "^\\s*(#undef)\\s+((?<!\\w)[a-zA-Z_]\\w*(?!\\w))",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.gsc"
        },
        "2": {
          "name": "constant.language.gsc"
        }
      },
      "end": "(?<!\\\\)(?=\\n)"
    },
    "comment_line": {
      "name": "comment.gsc",
      "match": "//.*"
    },
    "comment_block": {
      "name": "comment.block.gsc",
      "begin": "/\\*",
      "end": "\\*/"
    },
    "keyword": {
      "patterns": [
        {
          "name": "keyword.control.gsc",
          "match": "\\b(in|if|else|for|foreach|while|return|switch|case|default|break|continue|wait|waittill|waittillframeend|endon|notify|thread)\\b"
        }
      ]
    },
    "numeric": {
      "name": "constant.numeric.gsc",
      "match": "\\b\\d+\\b"
    },
    "string": {
      "name": "string.quoted.double.gsc",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.gsc",
          "match": "\\\\."
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "match": "\\b(true|false|undefined)\\b",
          "name": "constant.language.gsc"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#string"
        },
        {
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
          "name": "variable.other.gsc"
        }
      ]
    },
    "function": {
      "patterns": [  
        {
          "name": "punctuation.function.path.gsc",
          "match": "[a-zA-Z0-9_\\\\]+(?=::)"
        },
        {
          "name": "support.function.gsc",
          "match": "::[a-zA-Z0-9_]\\w*"
        },
        {
          "name": "support.function.gsc",
          "match": "[a-zA-Z0-9_]\\w*(?=\\()"
        },
        {
          "name": "support.function.gsc",
          "match": "\\[\\s*\\[\\s*[a-zA-Z_][a-zA-Z0-9_]*\\s*\\]\\s*\\](?=\\()"
        }
      ]
		}
  }
}
