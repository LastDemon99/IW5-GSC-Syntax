{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Game Script Code",
	"patterns": [				
		{
			"include": "#include"
		},
		{
			"include": "#define"
		},
		{
			"include": "#using_animtree"
		},		
		{
			"include": "#block"
		},
		{
			"include": "#comment"
		}
	],
	"repository": {
		"comment": {
			"patterns": [
				{
					"name": "comment.line.gsc",
					"match": "//.*$"
				},
				{
					"name": "comment.block.gsc",
					"begin": "/\\*",
					"end": "\\*/",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.gsc"
						}}
				}
			]
		},
		"string": {
			"name": "string.quoted.double.gsc",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.gsc",
					"match": "\\\\."
				}
			]
		},
		"number": {
			"name": "constant.character.escape.gsc",
			"match": "(?<!\\w)-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(?!\\w)"
		},
		"keyword_variables": {
			"patterns": [
				{
					"name": "keyword.variables.gsc",
					"match": "\\b(?:true|false|undefined)\\b(?!\\.)"
				},
				{
					"name": "keyword.thread.gsc",
					"match": "\\bthread\\s"
				}
			]
		},					
		"statement": {
			"name": "keyword.control.gsc",
			"match": "\\b(if|else|switch|case|while|for|foreach|return|break|continue|assert|assertex)\\b"
		},
		"operators": {
			"name": "keyword.operator.gsc",
			"match": "\\?|:|-|--|-=|\\+|\\+\\+|\\+=|\\*|\\*\\*|\\/|%|=|==|!=|!|<|>|<=|>=|&&|\\|\\|"
		},
		"entity": {
			"name": "keyword.control.gsc",
			"match": "\\b(self|level)\\.?\\b"
		},
		"ref_variable": {
			"begin": "\\b([^\\s.]+)\\.(\\w+)\\b",
			"beginCaptures": {
				"1": {
				"name": "keyword.control.refvariable.gsc"
				},
				"2": {
				"name": "variable.parameter.refvariable.gsc"
				}
			},
			"end": "\\s"
		},
		"ref_function": {
			"patterns": [
				{
						"name": "keyword.control.reffunc.gsc",
						"match": "\\b(([^\\s]+)(?:\\s+(thread))?)\\s+(?=[a-zA-Z0-9_]\\w*\\()",
						"captures": {
						"1": { "name": "keyword.control.gsc" },
						"3": { "name": "keyword.gsc" }
					}
				},
				{
					"name": "keyword.control.reffunc.pointer.gsc",
					"match": "\\b(([^\\s]+)(?:\\s+(thread))?)\\s+(?=(?:[a-zA-Z0-9_]\\w*\\()|(?:[^\\s:]+::[^\\s:]+\\(.*?\\)))",
					"captures": {
						"1": { "name": "keyword.control.gsc" },
						"3": { "name": "keyword.gsc" }
					}
				},
				{
						"name": "keyword.control.reffunc.variable.gsc",
						"match": "\\b(([^\\s]+)(?:\\s+(thread))?)\\s+(?=(?:[a-zA-Z0-9_]\\w*\\()|\\[\\[([^\\]]+)\\]\\]\\(.*?\\))",
						"captures": {
						"1": { "name": "keyword.control.gsc" },
						"3": { "name": "keyword.gsc" }
					}
				}			
			]
		},	
		"function": {
			"patterns": [
				{
					"name": "support.function.gsc",
					"match": "([a-zA-Z0-9_]\\w*)(?=\\(.*?\\)\\;)"
				},
				{
					"name": "support.function.pointer.gsc",
					"match": "\\:\\:([a-zA-Z0-9_]\\w*)(?=\\(.*?\\)\\;)"
				},
				{
					"name": "support.function.variable.gsc",
					"match": "\\[\\[([a-zA-Z0-9_]\\w*)\\]\\](?=\\(.*?\\)\\;)"
				}
			]
		},
		"variable_declaration": {
			"name": "support.variable.gsc",
			"match": "\\b([a-zA-Z0-9_]\\w*)\\b(?=\\s*([-\\+\\*\\/%])?=)"
		},
		"argument": {
			"name": "keyword.operator.argument.gsc",
			"match": "([a-zA-Z0-9_]\\w*)"
		},	
		"include": {
			"begin": "^(#include\\b)\\s*([^;]*);?$",
			"beginCaptures": {
				"1": {
				"name": "invalid.gsc"
				},
				"2": {
				"name": "constant.gsc"
				}
			},
			"end": "\\s"
		},
		"define": {
			"begin": "^(#define\\b)\\s*([^\\s]+)\\s+(.+)$",
			"beginCaptures": {
				"1": {
				"name": "invalid.gsc"
				},
				"2": {
				"name": "constant.gsc"
				},
				"3": {
					"patterns": [
					  {
						"include": "#number"
					  },
					  {
						"include": "#string"
					  }
					]
				}
			},
			"end": "\\s"
		},
		"using_animtree": {
			"name": "support.function.gsc",
			"match": "^#using_animtree(?=\\()$"
		},
		"block": {
			"patterns": [
				{
					"name": "meta.block.gsc",
					"begin": "^([a-zA-Z0-9_]\\w*)(?=\\(.*?\\)\\s*(?://.*?$)?)",
					"beginCaptures": {
						"1": {
							"name": "support.function.gsc"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.block.end.gsc"
						}
					},
					"patterns": [
						{
							"include": "#comment"
						},		
						{
							"include": "#string"
						},
						{
							"include": "#number"
						},
						{
							"include": "#keyword_variables"
						},
						{
							"include": "#statement"
						},
						{
							"include": "#operators"
						},
						{
							"include": "#thread"
						},
						{
							"include": "#ref_variable"
						},
						{
							"include": "#entity"
						},
						{
							"include": "#ref_function"
						},
						{
							"include": "#function"
						},
						{
							"include": "#variable_declaration"
						},
						{
							"include": "$base"
						}
					]
				}
			]
		}
	},
	"scopeName": "source.gsc"
}